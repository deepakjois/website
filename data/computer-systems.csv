"publicationTypes","zoomFactorFullScreen","year","searchResult","title","keywords","timesCited","authors","publishedDate","lastReadDate","lastReadPosition","uri","issue","pmid","timesRead","importedDate","tempAuthorString","url","affiliation","modifiedDate","volume","category","doi","flagged","zoomFactorTab","language","citeKey","rating","label","journal","zoomFactorPreview","markedDeleted","abstract","path","openAccess","pages","searchResultType",
"","","2001","0","SEDA: An architecture for well-conditioned; scalable Internet services","","649","M Welsh; D Culler; E Brewer","2001-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 207.539}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p288","","12012291446074280150related:1oi4JW07tKYJ","1","2010-10-05 00:25:44 -0700","","http://portal.acm.org/citation.cfm?id=502059.502057","","2010-10-05 00:25:44 -0700","","","","0","1.194762706756592","","Welsh:2001p288","0","","ACM SIGOPS Operating Systems …","1.193126082420349","0"," based on multiprogramming; as the focus continues to be on safe and  resource virtualization  In ; each component of the  responds to particular types of events; such driven concurrency mod- els have been studied extensively in the JAWS   [23; 24]. ","/Users/deepak/Dropbox/Papers/2001/Welsh/ACM SIGOPS Operating Systems … 2001 Welsh.pdf","0","","Google Scholar",
"","","2001","0","Paxos made simple","","232","L Lamport","2001-01-01 00:00:00 -0800","","0;{0; 792.198}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p835","","11066314785084766940related:3HqhSapyk5kJ","0","2010-10-05 00:57:46 -0700","","http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.69.3093&rep=rep1&type=pdf","","2010-10-05 00:57:46 -0700","","","","0","1.192810416221619","","Lamport:2001p835","0","","ACM SIGACT News","1.191176414489746","0","The  algorithm for implementing a fault-tolerant distributed system has been regarded as difficult to understand; perhaps because the original presentation was Greek to many readers [5]. In fact; it is among the sim- plest and most obvious of distributed algorithms. At its ","/Users/deepak/Dropbox/Papers/2001/Lamport/ACM SIGACT News 2001 Lamport.pdf","0","","Google Scholar",
"","","1998","0","Locality-aware request distribution in cluster-based network servers","","642","V Pai; M Aron; G Banga; M Svendsen","1998-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","3;{-5.5; 629.099}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p702","","6427786207215593660related:vKg95X8VNFkJ","1","2010-10-05 00:42:17 -0700","","http://portal.acm.org/citation.cfm?id=291006.291048","","2010-10-05 00:42:17 -0700","","","","0","1.169871807098389","","Pai:1998p702","0","","Proceedings of the …","1.168269276618958","0"," A -  server consists of a front-end; responsible for re- quest ; and a number of back  With content-based  ; the front- end takes into account both the /content re- quested  The -   (LARD) strat- ","/Users/deepak/Dropbox/Papers/1998/Pai/Proceedings of the … 1998 Pai.pdf","0","","Google Scholar",
"","","2006","0","The Chubby lock service for loosely-coupled distributed systems","","177","M Burrows","2006-01-01 00:00:00 -0800","","0;{0; 792.347}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1026","","8227769567900586970related:2tN7VNToLnIJ","0","2010-10-05 01:04:12 -0700","","http://portal.acm.org/citation.cfm?id=1298455.1298487","","2010-10-05 01:04:12 -0700","","","","0","1.192810416221619","","Burrows:2006p1026","0","","… of the 7th symposium on Operating systems design …","1.191176414489746","0","We describe our experiences with the  ser- vice; which is intended to provide coarse-grained - ing as well as reliable (though low-volume) storage for a - .  provides an interface much like a  file  with ","/Users/deepak/Dropbox/Papers/2006/Burrows/… of the 7th symposium on Operating systems design … 2006 Burrows.pdf","0","","Google Scholar",
"","","2000","0","Scalable; distributed data structures for internet service construction","","230","S Gribble; E Brewer; J Hellerstein","2000-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.198}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p614","","14054622393235708251related:W5kQIZoMDMMJ","1","2010-10-05 00:39:51 -0700","","http://portal.acm.org/citation.cfm?id=1251251","","2010-10-05 00:39:51 -0700","","","","0","1.192810416221619","","Gribble:2000p614","0","","Proceedings of the 4th …","1.191176414489746","0","This paper presents a new persistent  manage- ment layer designed to simplify cluster-based . This self-managing layer; called a (DDS); presents a conven- tional single-site  interface to  au- thors; ","/Users/deepak/Dropbox/Papers/2000/Gribble/Proceedings of the 4th … 2000 Gribble.pdf","0","","Google Scholar",
"","","1999","0","Flash: An efficient and portable Web server","","","V Peter; P Druschel; W Zwaenepoel","1999-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 791.68}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p310","","","1","2010-10-05 00:25:54 -0700","","http://en.scientificcommons.org/42933157","","2010-10-05 00:25:54 -0700","","","","0","1.192810416221619","","Peter:1999p310","0","","en.scientificcommons.org","1.193126082420349","0","This paper presents the design of a new  architecture called the asymmetric multi-process eventdriven (AMPED) architecture; and evaluates the performance of an implementation of this architecture; the . The  combines the high ","/Users/deepak/Dropbox/Papers/1999/Peter/en.scientificcommons.org 1999 Peter.pdf","0","","Google Scholar",
"","","2007","0","On designing and deploying internet-scale services","","27","J Hamilton","2007-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.05}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1372","","13057411455897365016related:GOrguok-NbUJ","1","2010-10-05 01:14:25 -0700","","http://www.usenix.org/events/lisa07/tech/full_papers/hamilton/hamilton_html/","","2010-10-24 09:48:17 -0700","","","","0","1.192810416221619","","Hamilton:2007p1372","0","","Proceedings of LISA","1.191176","0","The system-to-administrator ratio is commonly used as a rough metric to understand administrative costs in high-scale . With smaller; less automated  this ratio can be as low as 2:1; whereas on industry leading; highly automated ; we've seen ratios as high as ","/Users/deepak/Dropbox/Papers/2007/Hamilton/Proceedings of LISA 2007 Hamilton.pdf","0","","Google Scholar",
"inproceedings","","2010","0","Turning down the LAMP: Software Specialisation for the Cloud","","","Anil Madhavapeddy; Richard Mortier; Ripduman Sohan; Thomas Gazagnaire; Steven Hand; Tim Deegan; Derek McAuley; Jon Crowcroft","","2010-10-24 11:12:14 -0700","0;{4.89712; 792.355}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p2590","","","1","2010-10-24 09:02:23 -0700","Madhavapeddy et al.","","","2010-10-24 09:02:23 -0700","","inproceedings","","0","","","madhavapeddy10hotcloud","0","cite-key madhavapeddy10hotcloud","Proceedings","1.22521","0","","/Users/deepak/Dropbox/Papers/2010/Madhavapeddy/Proceedings 2010 Madhavapeddy.pdf","0","","",
"","1.5","2003","0","Xen and the Art of Virtualization","","","Paul Barham; Boris Dragovic; Keir Fraser; Tim Harris; Rolf Neugebauer; Ian Pratt; Andrew Warfield","2003-08-12 16:59:00 -0700","","5;{0; 167.655}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1136","","675557","0","2010-10-05 01:08:25 -0700","","http://citeseer.ist.psu.edu/675557","University of Cambridge Computer Laboratory","2010-10-05 01:08:25 -0700","","","","0","1.192810416221619","eng","Barham:2003p1136","0","","","1.191176414489746","0","Numerous systems have been designed which use virtualization tosubdivide the ample resources of a modern computer. Some requirespecialized hardware; or cannot support commodity operating systems.Some target 100% binary compatibility at the expense ofperformance. Others sacrifice security or functionality for speed.Few offer resource isolation or performance guarantees; most provideonly best-effort provisioning; risking denial of service.","/Users/deepak/Dropbox/Papers/2003/Barham/2003 Barham.pdf","0","","Citeseer",
"","","1997","0","Cluster-based scalable network services","","573","A Fox; S Gribble; Y Chawathe; E Brewer","1997-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 773.729}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p609","","15493961418040566583related:N2PqtdGbBdcJ","1","2010-10-05 00:38:56 -0700","","http://portal.acm.org/citation.cfm?id=268998.266662","","2010-10-05 00:38:56 -0700","","","","0","1.192810416221619","","Fox:1997p609","0","","ACM SIGOPS …","1.191176","0","We identifit three fundamental requirements for  net- work : incremental and oveflow growth provi- sioning; 24x7 availability through fault masking; and cost- effectiveness. We argue that clusters of commodity workstations interconnected by a high- ","/Users/deepak/Dropbox/Papers/1997/Fox/ACM SIGOPS … 1997 Fox.pdf","0","","Google Scholar",
"","","2006","0","A comparison of software and hardware techniques for x86 virtualization","","239","K Adams; O Agesen","2006-01-01 00:00:00 -0800","","0;{0; 792.05}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1184","","1445139957386984283related:WzvGciIrDhQJ","0","2010-10-05 01:09:29 -0700","","http://portal.acm.org/citation.cfm?id=1168860","","2010-10-05 01:09:29 -0700","","","","0","1.192810416221619","","Adams:2006p1184","0","","… of the 12th international conference on …","1.191176","0","Until recently; the  architecture has not permitted classical trap-and-emulate . Virtual Machine Monitors for ; such as VMware R O Workstation and Virtual PC; have instead used binary translation of the guest kernel code. However; both Intel ","/Users/deepak/Dropbox/Papers/2006/Adams/… of the 12th international conference on … 2006 Adams.pdf","0","","Google Scholar",
"","","2008","0","MapReduce: Simplified data processing on large clusters","","2024","J Dean; S Ghemawat","2008-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 791.704}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1098","","13171193432274178825related:CROphqR6ybYJ","1","2010-10-05 01:07:36 -0700","","http://portal.acm.org/citation.cfm?id=1327452.1327492&coll=GUIDE&dl=&idx=J79&part=magazine&WantType=Magazines&title=Communications%20of%20the%20ACM","","2010-10-05 01:07:36 -0700","","","","0","1.192810416221619","","Dean:2008p1098","0","","Communications of the ACM","1.191176414489746","0","1 Introduction Prior to our development of ; the authors and many others at Google implemented hundreds of special-purpose computations that process  amounts of raw ; such as crawled documents; Web request logs; etc.; to compute various kinds of ","/Users/deepak/Dropbox/Papers/2008/Dean/Communications of the ACM 2008 Dean.pdf","0","","Google Scholar",
"","","2010","0","The Case for Determinism in Database Systems","","","A Thomson; D Abadi","2010-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.396}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1313","","related:d0XyUPsFnOEJ","1","2010-10-05 01:12:26 -0700","","http://posterous.com/getfile/files.posterous.com/irr/GkzPeBvNGEkvGEkP6CMyxickK3E39NJ8sDLLF5dBX7SIDki88TQ1HJ8MPMHE/determinism-vldb10.pdf","","2010-10-05 01:12:26 -0700","","","","0","1.192810416221619","","Thomson:2010p1313","0","","Proceedings of the VLDB Endowment","1.191176414489746","0","ABSTRACT Replication is a widely used method for achieving high avail- ability in . Due to the nondeterminism in- herent in traditional concurrency control schemes; however; special care must be taken to ensure that replicas don't diverge. Log shipping; ","/Users/deepak/Dropbox/Papers/2010/Thomson/Proceedings of the VLDB Endowment 2010 Thomson.pdf","0","","Google Scholar",
"","","1999","0","A scalable and explicit event delivery mechanism for UNIX","","120","G Banga; J Mogul; P Druschel","1999-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.198}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p396","","9835153714148270497related:oeErszF8fYgJ","1","2010-10-05 00:30:51 -0700","","http://portal.acm.org/citation.cfm?id=1268727","","2010-10-05 00:30:51 -0700","","","","0","1.192810416221619","","Banga:1999p396","0","","Proceedings of the annual …","1.191176414489746","0"," applications not wishing to block when doing I/O often use the select() system call; to wait for  on multiple file descriptors. The select()  works well for small-scale applications; but scales poorly as the number of file descriptors increases. Many modern ","/Users/deepak/Dropbox/Papers/1999/Banga/Proceedings of the annual … 1999 Banga.pdf","0","","Google Scholar",
"","1.5","2001","0","Hints for Computer System Design","","","Butler W Lampson","2001-03-28 15:59:00 -0800","2010-10-09 13:26:54 -0700","0;{0; 581.186}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p268","","492698","2","2010-10-04 22:27:45 -0700","","http://citeseer.ist.psu.edu/492698","Computer Science Laboratory; Xerox Palo Alto Research Center","2010-10-04 22:27:45 -0700","","","","0","1.192810416221619","eng","Lampson:2001p268","0","","","1.191176414489746","0","Studying the design and implementation of a number of computer has led to some general hintsfor system design. They are described here and illustrated by many examples; ranging fromhardware such as the Alto and the Dorado to application programs such as Bravo and Star.","/Users/deepak/Dropbox/Papers/2001/Lampson/2001 Lampson.pdf","0","","Citeseer",
"","","2000","0","Scalable content-aware request distribution in cluster-based networks servers","","291","M Aron; D Sanders; P Druschel","2000-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 791.853}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p714","","6015865324141748092related:fB8PjqOlfFMJ","1","2010-10-05 00:45:34 -0700","","http://portal.acm.org/citation.cfm?id=1267750","","2010-10-05 00:45:34 -0700","","","","0","1.192810416221619","","Aron:2000p714","0","","Proceedings of the …","1.191176414489746","0"," We present a  architecture for -   in web  clusters. of the back-end nodes; which may forward the incoming  to another  9. Distributed Packet Rewriting and its Application to   Architectures; Proceedings of the ","/Users/deepak/Dropbox/Papers/2000/Aron/Proceedings of the … 2000 Aron.pdf","0","","Google Scholar",
"","","2004","0","accept()able Strategies for Improving Web Server Performance","","","Tim Brecht; David Pariag; Louay Gammo","2004-06-29 16:59:00 -0700","2010-10-10 12:17:18 -0700","0;{0; 792.198}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p366","","675523","1","2010-10-05 00:28:23 -0700","","http://citeseer.ist.psu.edu/675523","School of Computer Science; University of Waterloo","2010-10-05 00:28:23 -0700","","","","0","1.192810416221619","eng","Brecht:2004p366","0","","","1.191176414489746","0","This paper evaluates techniques for improving the performanceof three architecturally different web servers. Westudy strategies for effectively accepting incoming connectionsunder conditions of high load. Our experimental evaluationshows that the method used to accept new connectionrequests can significantly impact server performance.By modifying each server's accept strategy; we improve theperformance of the kernel-mode TUX server; the multithreadedKnot server and the event-driven server. Undertwo different workloads; we improve the throughputof these servers by as much as 19% -- 36% for TUX; 0%-- 32% for Knot; and 39% -- 71% for the server. Interestingly;the performance improvements realized by the usermodeserver allow it to obtain performance that rivals anunmodified TUX server.","/Users/deepak/Dropbox/Papers/2004/Brecht/2004 Brecht.pdf","0","","Citeseer",
"","","2000","0","httperf---A Tool for Measuring Web Server Performance","","","David Mosberger; Tai Jin","2000-01-09 16:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.099}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p369","","410355","1","2010-10-05 00:29:52 -0700","","http://citeseer.ist.psu.edu/410355","","2010-10-05 00:29:52 -0700","","","","0","1.192810416221619","eng","Mosberger:2000p369","0","","","1.191176414489746","0","This paper describes httperf; a tool for measuringweb server performance. It provides a flexible facilityfor generating various HTTP workloads and formeasuring server performance. The focus of httperfis not on implementing one particular benchmarkbut on providing a robust; high-performance toolthat facilitates the construction of both micro- andmacro-level benchmarks. The three distinguishingcharacteristics of httperf are its robustness; whichincludes the ability to generate and sustain serveroverload; support for the HTTP/1.1 protocol; andits extensibility to new workload generators andperformance measurements. In addition to reportingon the design and implementation of httperf thispaper also discusses some of the experiences andinsights gained while realizing this tool.1 IntroductionA web system consists of a web server; a numberof clients; and a network that connects the clients tothe server. The protocol used to communicate betweenthe client and server is HTTP...","/Users/deepak/Dropbox/Papers/2000/Mosberger/2000 Mosberger.pdf","0","","Citeseer",
"","1.5","2003","0","Web search for a planet: The Google cluster architecture","","411","L Barroso; J Dean; U Holzle","2003-01-01 00:00:00 -0800","2010-10-04 18:30:52 -0700","0;{0; 792.099}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p63","","12794984267154315019related:C9dxdmbqkLEJ","2","2010-10-04 18:26:13 -0700","","http://ieeexplore.ieee.org/xpls/abs_all.jsp?&arnumber=1196112","","2010-10-04 18:33:38 -0700","","","","0","0.9281045794487","","Barroso:2003p63","5","","IEEE micro","1.191176414489746","0","Few  services require as much computation per request as  engines. On average; a single query on Google reads hundreds of megabytes of data and consumes tens of billions of CPU cycles. Supporting a peak request stream of thousands of queries per ","/Users/deepak/Dropbox/Papers/2003/Barroso/IEEE micro 2003 Barroso.pdf","0","","Google Scholar",
"","1.5","2003","0","Capriccio: scalable threads for internet services","","174","R Von Behren; J Condit; F Zhou","2003-01-01 00:00:00 -0800","2010-10-09 13:32:19 -0700","0;{-8.38134; 841.712}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p490","","8824517957232770964related:lD_q6lP8dnoJ","1","2010-10-05 00:35:04 -0700","","http://portal.acm.org/citation.cfm?id=945471","","2010-10-05 00:35:04 -0700","","","","0","1.226890802383423","","VonBehren:2003p490","0","","ACM SIGOPS …","1.193126082420349","0","ABSTRACT This paper presents ; a  package for use with high-concurrency servers. While recent work has advocated event-based systems; we believe that - based systems can provide a simpler programming model that achieves equivalent or superior ","/Users/deepak/Dropbox/Papers/2003/Von Behren/ACM SIGOPS … 2003 Von Behren.pdf","0","","Google Scholar",
"","","2003","0","Why Events Are A Bad Idea","","","Rob Von Behren; Jeremy Condit; Eric Brewer","2003-06-17 16:59:00 -0700","2010-10-10 12:17:18 -0700","0;{0; 792.099}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p466","","673767","1","2010-10-05 00:33:38 -0700","","http://citeseer.ist.psu.edu/673767","Computer Science Division ; University of California at Berkeley; {jrvb;","2010-10-05 00:33:38 -0700","","","","0","1.192810416221619","eng","Behren:2003p466","0","","","1.191176414489746","0","Event-based programming has been highly touted in recentyears as the best way to write highly concurrent applications.Having worked on several of these systems; we now believe thisapproach to be a mistake. Specifically; we believe that threadscan achieve all of the strengths of events; including supportfor high concurrency; low overhead; and a simple concurrencymodel. Moreover; we argue that threads allow a simpler andmore natural programming style.","/Users/deepak/Dropbox/Papers/2003/Behren/2003 Behren.pdf","0","","Citeseer",
"","","2003","0","Incentives build robustness in BitTorrent","","1823","B Cohen","2003-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 791.951}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p884","","6571075782681859508related:tJXs-psmMVsJ","1","2010-10-05 01:02:03 -0700","","http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.14.1911&rep=rep1&type=pdf","","2010-10-05 01:02:03 -0700","","","","0","1.192810416221619","","Cohen:2003p884","0","","Workshop on Economics of Peer-to-Peer systems","1.191176414489746","0","When a file is made available using HTTP; all upload cost is placed on the hosting machine. With BitTor- rent; when multiple people are downloading the same file at the same time; they upload pieces of the file to each other. This redistributes the cost of upload to ","/Users/deepak/Dropbox/Papers/2003/Cohen/Workshop on Economics of Peer-to-Peer systems 2003 Cohen.pdf","0","","Google Scholar",
"","1.5","2000","0","End-To-End Arguments In System Design","","","J. H Saltzer; D. P Reed; D. D Clark","2000-07-23 16:59:00 -0700","2010-10-04 22:24:22 -0700","0;{-62.8601; 702.089}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p215","","407760","2","2010-10-04 22:22:13 -0700","","http://citeseer.ist.psu.edu/407760","M.I.T. Laboratory for Computer Science","2010-10-04 22:25:01 -0700","","","","0","1.192810416221619","eng","Saltzer:2000p215","5","","","1.193126082420349","0","This paper presents a design principle that helps guide placement of functions among the","/Users/deepak/Dropbox/Papers/2000/Saltzer/2000 Saltzer-1.pdf","0","","Citeseer",
"","","2008","0","Bigtable: A distributed storage system for structured data","","529","F Chang; J Dean; S Ghemawat; W Hsieh","2008-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 792.198}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p1068","","17617703893769980559related:jwotSlmofvQJ","1","2010-10-05 01:05:39 -0700","","http://portal.acm.org/citation.cfm?id=1365815.1365816","","2010-10-05 01:05:39 -0700","","","","0","1.192810416221619","","Chang:2008p1068","0","","… on Computer Systems …","1.191176414489746","0","This article was originally published as an award paper in the Proceedings of the 7th Symposium on Operating  Design and Implementation [Chang et al. 2006]. It is being republished here with minor modifications and clarifications. Authors' address: Google Inc.; 1600 ","/Users/deepak/Dropbox/Papers/2008/Chang/… on Computer Systems … 2008 Chang.pdf","0","","Google Scholar",
"","","2001","0","Lessons from giant-scale services","","","E Brewer","","2010-10-10 12:17:18 -0700","0;{0; 684.445}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p138","4","939450","1","2010-10-04 22:19:23 -0700","","http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=939450&queryText%3D%28%28Lessons+from+Giant-Scale+Services%29%29%26openedRefinements%3D*%26sortType%3Ddesc_Publication+Year%26matchBoolean%3Dtrue%26rowsPerPage%3D50%26searchField%3DSearch+All","","2010-10-04 22:20:22 -0700","5","","10.1109/4236.939450","0","1.192810416221619","","Brewer:2001p138","5","","Internet Computing; IEEE","1.191176414489746","0","Web portals and ISPs such as AOL; Microsoft Network; and Yahoo have grown more than tenfold in the past five years (1996-2001). Despite their scale; growth rates; and rapid evolution of content and features; these sites and other “giant-scale” services like instant messaging and Napster must be always available. Many other major Web sites such as eBay; CNN; and Wal-Mart; have similar availability requirements. The article looks at the basic model for such services; focusing on the key real-world challenges they face (high availability; evolution; and growth); and developing some principles for attacking these problems. Few of the points made in the article are addressed in the literature; and most of the conclusions take the form of principles and approaches rather than absolute quantitative evaluations. This is due partly to the author's focus on high-level design; partly to the newness of the area; and partly to the proprietary nature of some of the information (which represents 15-20 very large sites). Nonetheless; the lessons are easy to understand and apply; and they simplify the design of large systems","/Users/deepak/Dropbox/Papers/2001/Brewer/Internet Computing IEEE 2001 Brewer.pdf","0","46 - 55","IEEE Xplore",
"","","2003","0","The Google file system","","1291","S Ghemawat; H Gobioff; S Leung","2003-01-01 00:00:00 -0800","2010-10-10 12:17:18 -0700","0;{0; 791.853}","x-coredata://93566FB0-09BE-4F09-A323-C410AAF78866/Paper/p906","","12528813212514513702related:JvMlfTxJ360J","1","2010-10-05 01:02:48 -0700","","http://portal.acm.org/citation.cfm?id=1165389.945450","","2010-10-05 01:02:48 -0700","","","","0","1.192810416221619","","Ghemawat:2003p906","0","","ACM SIGOPS Operating …","1.191176414489746","0","ABSTRACT We have designed and implemented the  Sys- tem; a scalable distributed for large distributed data-intensive applications. It provides fault tolerance while running on inexpensive commodity hardware; and it delivers high aggregate performance to a ","/Users/deepak/Dropbox/Papers/2003/Ghemawat/ACM SIGOPS Operating … 2003 Ghemawat.pdf","0","","Google Scholar",
